import{f as M,r as l,i as E,j as D,c as x,o as y,a as o,k as R,t as W,u as X,_ as k,b as Y}from"./DaU3urLZ.js";const q={class:"animated-grid__controls"},L={class:"controls__btns"},N=M({name:"AnimatedGrid",__name:"AnimatedGrid",setup(S){const v=l(null),t=l(null),e=l(null),d=l(null),i=l(40),r=l(!1),u=l(0),s=l(0),c=l(0),m=()=>{if(t.value&&v.value){if(e.value=t.value.getContext("2d"),t.value.width=v.value.clientWidth,t.value.height=v.value.clientHeight,!e.value){console.error("2D context is not supported");return}}else console.error("Canvas element not found")},z=()=>{if(t.value&&e.value){e.value.clearRect(0,0,t.value.width,t.value.height),e.value.strokeStyle="#333",e.value.lineWidth=1;for(let a=0;a<=t.value.height;a+=i.value)e.value.beginPath(),e.value.moveTo(0,a),e.value.lineTo(t.value.width,a),e.value.stroke();for(let a=0;a<=t.value.width;a+=i.value)e.value.beginPath(),e.value.moveTo(a,0),e.value.lineTo(a,t.value.height),e.value.stroke();P(),T()}},p=()=>{c.value+=1,z(),requestAnimationFrame(p)},P=()=>{if(t.value&&e.value)for(let a=0;a<=t.value.width;a+=i.value)for(let n=0;n<=t.value.height;n+=i.value){const C=Math.sqrt((a-u.value)**2+(n-s.value)**2),w=150;let f=0,h=0,_=1;if(r.value&&(f=Math.sin(c.value*.02+a*.008+n*.005)*5,h=Math.cos(c.value*.02+n*.008+a*.005)*5,_=1+Math.sin(c.value*.03+a*.01+n*.01)*.5),C<w&&e.value){const g=((1-C/w)*4+1)*_;e.value.fillStyle="#66d9ff",e.value.beginPath(),e.value.arc(a+f,n+h,g,0,Math.PI*2),e.value.fill()}else{const g=_;e.value.fillStyle=r.value?"#666":"#444",e.value.beginPath(),e.value.arc(a+f,n+h,g,0,Math.PI*2),e.value.fill()}}},T=()=>{if(e.value){const a=e.value.createRadialGradient(u.value,s.value,0,u.value,s.value,100);a.addColorStop(0,"rgba(102, 217, 255, 0.1)"),a.addColorStop(1,"rgba(102, 217, 255, 0)"),e.value.fillStyle=a,e.value.beginPath(),e.value.arc(u.value,s.value,100,0,Math.PI*2),e.value.fill()}},G=a=>{if(!t.value)return;const n=t.value.getBoundingClientRect();u.value=a.clientX-n.left,s.value=a.clientY-n.top,b("crosshair"),d.value&&clearTimeout(d.value),d.value=setTimeout(()=>{b("none")},2e3)},I=a=>{if(!t.value)return;const n=t.value.getBoundingClientRect();u.value=a.touches[0].clientX-n.left,s.value=a.touches[0].clientY-n.top},b=a=>{t.value&&(t.value.style.cursor=a)},A=()=>{r.value=!r.value},B=()=>{i.value=i.value===40?60:i.value===60?80:40};return E(()=>{m(),window.addEventListener("resize",m),p()}),D(()=>{window.removeEventListener("resize",m)}),(a,n)=>(y(),x("div",{ref_key:"animatedWrap",ref:v,class:"animated-grid__wrapper"},[o("canvas",{ref_key:"canvas",ref:t,class:"animated-grid",role:"img","aria-label":"Interactive animated grid with mouse and keyboard controls",tabindex:"0",onMousemove:G,onTouchmove:R(I,["prevent"])},null,544),o("div",q,[n[0]||(n[0]=o("div",null,"Controls:",-1)),o("div",L,[o("button",{id:"animBtn",onClick:A},W(X(r)?"Disable":"Enable")+" animation ",1),o("button",{onClick:B},"Change grid size")]),n[1]||(n[1]=o("div",null,[o("small",null,"Move your mouse over the grid!")],-1))])],512))}}),V=k(N,[["__scopeId","data-v-b956c599"]]),j=M({name:"AnimatedGridCanvas",__name:"animated-grid-canvas",setup(S){return(v,t)=>{const e=V;return y(),x("main",null,[Y(e)])}}}),H=k(j,[["__scopeId","data-v-ac900b3d"]]);export{H as default};
