var T=Object.defineProperty;var E=(c,n,t)=>n in c?T(c,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[n]=t;var u=(c,n,t)=>E(c,typeof n!="symbol"?n+"":n,t);import{y as g,r as v,j as L,B as R,c as P,o as C,a as x,_ as z,b as S}from"./Ct34OBA8.js";const j=g({name:"CanvasParticle",__name:"CanvasParticle",setup(c){const n=v(null),t=v(null),s=v(null),o=v([]),d=v(0),h=v(0),m=v(0);class k{constructor(){u(this,"x");u(this,"y");u(this,"size");u(this,"speedX");u(this,"speedY");u(this,"color");this.x=d.value,this.y=h.value,this.size=Math.random()*5+1,this.speedX=Math.random()*5-1.5,this.speedY=Math.random()*5-1.5,this.color=`hsl(${m.value}, 100%, 50%)`}update(){this.x+=this.speedX,this.y+=this.speedY,this.size>.2&&(this.size-=.1)}draw(){s.value&&A(s.value,this.x,this.y,this.size,this.color)}}const A=(e,a,l,i,r)=>{e.fillStyle=r,e.beginPath(),e.arc(a,l,i,0,Math.PI*2),e.fill()},B=(e,a,l,i,r,_)=>{e.beginPath(),e.strokeStyle=_,e.lineWidth=.2,e.moveTo(a,l),e.lineTo(i,r),e.stroke(),e.closePath()},f=()=>{if(t.value&&n.value){if(t.value.width=n.value.clientWidth,t.value.height=n.value.clientHeight,s.value=t.value.getContext("2d"),!s.value){console.error("2D context is not supported");return}}else console.error("Canvas element not found")},p=e=>{o.value.length<200&&(o.value=[...o.value,...Array.from({length:e},()=>new k)])},X=()=>{t.value&&t.value.addEventListener("pointermove",e=>{const a=t.value.getBoundingClientRect();d.value=e.clientX-a.left,h.value=e.clientY-a.top,p(5)})},Y=e=>{if(!t.value)return;const a=t.value.getBoundingClientRect();d.value=e.clientX-a.left,h.value=e.clientY-a.top,p(10)},M=e=>{if(!t.value)return;const a=t.value.getBoundingClientRect();d.value=e.clientX-a.left,h.value=e.clientY-a.top,p(10)},b=()=>{!s.value||!t.value||(s.value.clearRect(0,0,t.value.width,t.value.height),o.value=o.value.filter((e,a)=>{e.update(),e.draw();for(let l=a;l<o.value.length;l++){const i=e.x-o.value[l].x,r=e.y-o.value[l].y;Math.sqrt(i*i+r*r)<100&&s.value&&B(s.value,e.x,e.y,o.value[l].x,o.value[l].y,e.color)}return e.size>.3}),y(s.value,"Canvas Particle",t.value.width/2,50,"white","bold 28px Arial"),y(s.value,"Hover - Touch",t.value.width/2,100,"white","bold 28px Arial"),m.value+=2)},w=()=>{b(),requestAnimationFrame(w)},y=(e,a,l,i,r,_="20px Arial",I="center")=>{e.fillStyle=r,e.font=_,e.textAlign=I,e.fillText(a,l,i)};return L(()=>{f(),window.addEventListener("resize",f),X(),w()}),R(()=>{window.removeEventListener("resize",f)}),(e,a)=>(C(),P("div",{ref_key:"wrap",ref:n,class:"canvas-wrap"},[x("canvas",{ref_key:"canvas",ref:t,class:"canvas-el",onClick:Y,onPointerdown:M},null,544)],512))}}),q=z(j,[["__scopeId","data-v-e4c8d8fd"]]),D={class:"main__canvas-vanilla"},H={class:"container"},N=g({name:"CanvasParticleInteractive",__name:"canvas-particle-interactive",setup(c){return(n,t)=>{const s=q;return C(),P("main",D,[x("div",H,[S(s)])])}}}),$=z(N,[["__scopeId","data-v-ccccc93a"]]);export{$ as default};
