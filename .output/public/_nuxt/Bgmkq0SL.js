import{f as E,r as B,i as I,j as X,c as k,o as F,a as A,F as Y,m as $,n as L,u as G,t as O,_ as W,b as H}from"./2cLet2fW.js";const q=()=>{const R=(S,d)=>{S.clearRect(0,0,d.width,d.height)},b=S=>{const d=window.devicePixelRatio||1;return{width:S.width/d,height:S.height/d}},_=S=>{const d=S.getContext("2d");if(!d)return null;const n=window.devicePixelRatio||1;return d.scale(n,n),d.imageSmoothingEnabled=!0,d.imageSmoothingQuality="high",d};return{clearCanvas:R,getCanvasDimensions:b,setupCanvasContext:_,setupCanvas:(S,d,n,c)=>{const g=Math.min(d,c),t=window.devicePixelRatio||1;return S.width=g*t,S.height=g*n*t,S.style.width=`${g}px`,S.style.height=`${g*n}px`,_(S)}}},D=()=>({drawRect:(e,{x:o,y:s,width:l,height:u,color:h,hasStroke:p=!1})=>{e.fillStyle=h,e.fillRect(o,s,l,u),p&&(e.strokeStyle="#C0392B",e.lineWidth=3,e.strokeRect(o,s,l,u))},drawCircle:(e,{x:o,y:s,radius:l,color:u,isStroke:h=!1})=>{e.beginPath(),e.arc(o,s,l,0,2*Math.PI),h?(e.strokeStyle=u,e.lineWidth=8,e.stroke()):(e.fillStyle=u,e.fill())},drawTriangle:(e,{x:o,y:s,size:l,color:u})=>{e.fillStyle=u,e.beginPath(),e.moveTo(o,s-l),e.lineTo(o-l,s+l),e.lineTo(o+l,s+l),e.closePath(),e.fill()},drawRhombus:(e,{centerX:o,centerY:s,size:l,color:u})=>{e.fillStyle=u,e.beginPath(),e.moveTo(o,s-l),e.lineTo(o-l,s),e.lineTo(o,s+l),e.lineTo(o+l,s),e.closePath(),e.fill()},drawEllipse:(e,{x:o,y:s,radiusX:l,radiusY:u,color:h})=>{e.fillStyle=h,e.beginPath(),e.ellipse(o,s,l,u,0,0,2*Math.PI),e.fill()},drawPolygon:(e,{points:o,color:s})=>{o.length<3||(e.fillStyle=s,e.beginPath(),e.moveTo(o[0][0],o[0][1]),o.slice(1).forEach(([l,u])=>e.lineTo(l,u)),e.closePath(),e.fill())},drawLine:(e,{x1:o,y1:s,x2:l,y2:u,color:h,width:p,isDashed:r=!1})=>{e.strokeStyle=h,e.lineWidth=p,r&&e.setLineDash([10,5]),e.beginPath(),e.moveTo(o,s),e.lineTo(l,u),e.stroke(),r&&e.setLineDash([])},drawStar:(e,{x:o,y:s,outerRadius:l,innerRadius:u,points:h,color:p})=>{e.fillStyle=p,e.beginPath();for(let r=0;r<h*2;r++){const a=r%2===0?l:u,i=r*Math.PI/h,y=o+Math.cos(i)*a,M=s+Math.sin(i)*a;r===0?e.moveTo(y,M):e.lineTo(y,M)}e.closePath(),e.fill()},drawRegularPolygon:(e,{x:o,y:s,radius:l,sides:u,color:h})=>{e.fillStyle=h,e.beginPath();for(let p=0;p<u;p++){const r=p*2*Math.PI/u,a=o+Math.cos(r)*l,i=s+Math.sin(r)*l;p===0?e.moveTo(a,i):e.lineTo(a,i)}e.closePath(),e.fill()},drawRoundedRect:(e,{x:o,y:s,width:l,height:u,radius:h,color:p})=>{e.fillStyle=p,e.beginPath(),e.roundRect(o,s,l,u,h),e.fill()},drawArc:(e,{x:o,y:s,radius:l,startAngle:u,endAngle:h,color:p})=>{e.fillStyle=p,e.beginPath(),e.arc(o,s,l,u,h),e.lineTo(o,s),e.closePath(),e.fill()},drawBezierCurve:(e,{startX:o,startY:s,cp1X:l,cp1Y:u,cp2X:h,cp2Y:p,endX:r,endY:a,color:i,width:y})=>{e.strokeStyle=i,e.lineWidth=y,e.beginPath(),e.moveTo(o,s),e.bezierCurveTo(l,u,h,p,r,a),e.stroke()},drawQuadraticCurve:(e,{startX:o,startY:s,cpX:l,cpY:u,endX:h,endY:p,color:r,width:a})=>{e.strokeStyle=r,e.lineWidth=a,e.beginPath(),e.moveTo(o,s),e.quadraticCurveTo(l,u,h,p),e.stroke()},drawArrow:(e,{x1:o,y1:s,x2:l,y2:u,thickness:h,color:p})=>{const r=Math.atan2(u-s,l-o),a=h*3,i=a*.8;e.fillStyle=p,e.strokeStyle=p,e.lineWidth=h,e.beginPath(),e.moveTo(o,s),e.lineTo(l-i*Math.cos(r),u-i*Math.sin(r)),e.stroke(),e.beginPath(),e.moveTo(l,u),e.lineTo(l-a*Math.cos(r-Math.PI/6),u-a*Math.sin(r-Math.PI/6)),e.lineTo(l-a*Math.cos(r+Math.PI/6),u-a*Math.sin(r+Math.PI/6)),e.closePath(),e.fill()},drawHeart:(e,{x:o,y:s,size:l,color:u})=>{e.fillStyle=u,e.beginPath();const h=l*.3;e.moveTo(o,s+h),e.bezierCurveTo(o,s,o-l/2,s,o-l/2,s+h),e.bezierCurveTo(o-l/2,s+(h+l)/2,o,s+(h+l)/2,o,s+l),e.bezierCurveTo(o,s+(h+l)/2,o+l/2,s+(h+l)/2,o+l/2,s+h),e.bezierCurveTo(o+l/2,s,o,s,o,s+h),e.fill()},drawSpiral:(e,{centerX:o,centerY:s,maxRadius:l,color:u,turns:h=3})=>{e.strokeStyle=u,e.lineWidth=l*.05,e.beginPath();const p=h*2*Math.PI;for(let r=0;r<p;r+=.1){const a=r/p*l,i=o+Math.cos(r)*a,y=s+Math.sin(r)*a;r===0?e.moveTo(i,y):e.lineTo(i,y)}e.stroke()}}),Q=()=>{const{drawCircle:R}=D();return{drawGridWithCircles:(n,{gridSize:c,rectX:g,rectY:t,rectWidth:v,rectHeight:m})=>{n.fillStyle="rgba(255, 255, 255, 0.1)",n.fillRect(g,t,v,m);for(let f=g+c;f<g+v-c;f+=c)for(let C=t+c;C<t+m-c;C+=c){const P=(f+C)*.5%360;R(n,{x:f,y:C,radius:c*.15,color:`hsl(${P}, 70%, 60%)`})}},drawZigzag:(n,{width:c,height:g,amplitude:t=20,frequency:v=.1,yPosition:m=.3})=>{n.strokeStyle="#FF6B6B",n.lineWidth=3,n.beginPath();for(let f=0;f<c;f+=20){const C=g*m+Math.sin(f*v)*t,P=g*m+Math.sin((f+10)*v)*t;f===0?n.moveTo(f,C):n.lineTo(f,C),n.lineTo(f+10,P)}n.stroke()},drawCheckeredPattern:(n,{width:c,height:g,cellSize:t=15,startX:v=.4,startY:m=.6,endX:f=.6,endY:C=.9})=>{for(let P=c*v;P<c*f;P+=t)for(let w=g*m;w<g*C;w+=t)(Math.floor(P/t)+Math.floor(w/t))%2===0&&(n.fillStyle="#E74C3C",n.fillRect(P,w,t,t))},drawConcentricCircles:(n,{centerX:c,centerY:g,colors:t,spacing:v=8})=>{t.forEach((m,f)=>{const C=t.length-f;n.strokeStyle=m,n.lineWidth=2,n.beginPath(),n.arc(c,g,C*v,0,2*Math.PI),n.stroke()})},drawSineWave:(n,{width:c,height:g,amplitude:t,frequency:v,phase:m=0,yOffset:f=.5,color:C="#45B7D1",lineWidth:P=3})=>{n.strokeStyle=C,n.lineWidth=P,n.beginPath();for(let w=0;w<c;w+=3){const e=g*f+Math.sin((w+m)*v)*t;w===0?n.moveTo(w,e):n.lineTo(w,e)}n.stroke()}}},V=()=>({drawRotatingShape:(n,{centerX:c,centerY:g,time:t,rotationSpeed:v,drawFunction:m})=>{n.save(),n.translate(c,g),n.rotate(t*v),m(n),n.restore()},drawPulsatingCircle:(n,{x:c,y:g,baseRadius:t,pulseAmplitude:v,pulseSpeed:m,time:f,color:C})=>{const P=t+Math.sin(f*m)*v;n.fillStyle=C,n.beginPath(),n.arc(c,g,P,0,2*Math.PI),n.fill()},drawOscillatingEllipse:(n,{x:c,y:g,baseRadiusX:t,baseRadiusY:v,oscillationSpeed:m,time:f,color:C})=>{const P=Math.sin(f*m)*.5+1;n.fillStyle=C,n.beginPath(),n.ellipse(c,g,t*P,v,0,0,2*Math.PI),n.fill()},drawMovingParticles:(n,{centerX:c,centerY:g,particleCount:t,baseRadius:v,radiusVariation:m,time:f,particleRadius:C})=>{for(let P=0;P<t;P++){const w=f*.01+P*Math.PI*2/t,e=v+Math.sin(f*.02+P)*m,o=c+Math.cos(w)*e,s=g+Math.sin(w)*e;n.fillStyle=`hsl(${P*(360/t)+f}, 80%, 60%)`,n.beginPath(),n.arc(o,s,C,0,2*Math.PI),n.fill()}},drawAnimatedSineWave:(n,{width:c,height:g,amplitude:t,frequency:v,phase:m,yOffset:f,color:C,lineWidth:P})=>{n.strokeStyle=C,n.lineWidth=P,n.beginPath();for(let w=0;w<c;w+=2){const e=g*f+Math.sin((w+m)*v)*t;w===0?n.moveTo(w,e):n.lineTo(w,e)}n.stroke()},drawColorCyclingShape:(n,{time:c,hueSpeed:g,saturation:t=70,lightness:v=60,drawFunction:m})=>{const C=`hsl(${c*g%360}, ${t}%, ${v}%)`;m(n,C)}}),N={class:"geometric-figures"},Z={class:"geometric-figures__controls"},j=["onClick"],U=2/3,J=800,K=E({name:"GeometricFigures",__name:"GeometricFigures",setup(R){const b=["basic","complex","patterns","animated"],{clearCanvas:_,getCanvasDimensions:T,setupCanvas:S}=q(),d=D(),n=Q(),c=V(),g=B(null),t=B(null),v=B("basic"),m=B(null),f=B(null),C=B(0),P=()=>{f.value&&(cancelAnimationFrame(f.value),f.value=null)},w=(r,a,i)=>{_(r,t.value),d.drawRect(r,{x:a*.05,y:i*.05,width:a*.2,height:i*.25,color:"#FF6B6B"}),d.drawRect(r,{x:a*.3,y:i*.05,width:a*.15,height:i*.25,color:"#E74C3C",hasStroke:!0}),d.drawCircle(r,{x:a*.6,y:i*.18,radius:a*.1,color:"#4ECDC4"}),d.drawCircle(r,{x:a*.8,y:i*.18,radius:a*.08,color:"#26A69A",isStroke:!0}),d.drawTriangle(r,{x:a*.15,y:i*.575,size:a*.1,color:"#45B7D1"}),d.drawRhombus(r,{centerX:a*.4,centerY:i*.55,size:a*.05,color:"#3498DB"}),d.drawEllipse(r,{x:a*.65,y:i*.55,radiusX:a*.12,radiusY:i*.08,color:"#F7DC6F"}),d.drawPolygon(r,{points:[[a*.75,i*.45],[a*.9,i*.45],[a*.95,i*.65],[a*.8,i*.65]],color:"#F39C12"}),d.drawPolygon(r,{points:[[a*.05,i*.8],[a*.25,i*.8],[a*.22,i*.95],[a*.08,i*.95]],color:"#9B59B6"}),d.drawLine(r,{x1:a*.4,y1:i*.8,x2:a*.6,y2:i*.95,color:"#8E44AD",width:2}),d.drawLine(r,{x1:a*.65,y1:i*.8,x2:a*.85,y2:i*.95,color:"#8E44AD",width:5}),d.drawLine(r,{x1:a*.5,y1:i*.35,x2:a*.9,y2:i*.35,color:"#E67E22",width:3,isDashed:!0})},e=(r,a,i)=>{_(r,t.value),d.drawStar(r,{x:a*.15,y:i*.2,outerRadius:a*.08,innerRadius:a*.04,points:5,color:"#FF6B6B"}),d.drawStar(r,{x:a*.35,y:i*.2,outerRadius:a*.06,innerRadius:a*.03,points:8,color:"#E74C3C"}),d.drawRegularPolygon(r,{x:a*.6,y:i*.2,radius:a*.08,sides:6,color:"#4ECDC4"}),d.drawRegularPolygon(r,{x:a*.8,y:i*.2,radius:a*.06,sides:8,color:"#26A69A"}),d.drawRoundedRect(r,{x:a*.05,y:i*.4,width:a*.2,height:i*.15,radius:a*.015,color:"#45B7D1"}),d.drawRoundedRect(r,{x:a*.3,y:i*.4,width:a*.15,height:i*.15,radius:a*.03,color:"#3498DB"}),d.drawArc(r,{x:a*.6,y:i*.5,radius:a*.1,startAngle:0,endAngle:Math.PI*1.5,color:"#F7DC6F"}),d.drawArc(r,{x:a*.8,y:i*.5,radius:a*.08,startAngle:Math.PI*.5,endAngle:Math.PI*1.8,color:"#F39C12"}),d.drawBezierCurve(r,{startX:a*.1,startY:i*.7,cp1X:a*.2,cp1Y:i*.6,cp2X:a*.3,cp2Y:i*.8,endX:a*.4,endY:i*.7,color:"#8E44AD",width:4}),d.drawQuadraticCurve(r,{startX:a*.5,startY:i*.8,cpX:a*.65,cpY:i*.7,endX:a*.8,endY:i*.8,color:"#9B59B6",width:3}),d.drawArrow(r,{x1:a*.15,y1:i*.85,x2:a*.35,y2:i*.85,thickness:a*.02,color:"#E67E22"}),d.drawHeart(r,{x:a*.65,y:i*.85,size:a*.04,color:"#E91E63"})},o=(r,a,i)=>{_(r,t.value);const y=Math.min(a,i)*.04;n.drawGridWithCircles(r,{width:a,height:i,gridSize:y,rectX:a*.25,rectY:i*.01,rectWidth:a*.28,rectHeight:i*.28}),n.drawZigzag(r,{width:a,height:i,amplitude:20,frequency:.1,yPosition:.3}),d.drawSpiral(r,{centerX:a*.1,centerY:i*.1,maxRadius:a*.04,color:"#4ECDC4",turns:3}),d.drawSpiral(r,{centerX:a*.9,centerY:i*.1,maxRadius:a*.05,color:"#45B7D1",turns:3}),d.drawSpiral(r,{centerX:a*.1,centerY:i*.9,maxRadius:a*.06,color:"#F7DC6F",turns:3}),d.drawSpiral(r,{centerX:a*.9,centerY:i*.9,maxRadius:a*.04,color:"#9B59B6",turns:3}),n.drawCheckeredPattern(r,{width:a,height:i,cellSize:15}),n.drawConcentricCircles(r,{centerX:a*.75,centerY:i*.75,colors:["#FF6B6B","#4ECDC4","#45B7D1","#F7DC6F","#9B59B6"]})},s=()=>{if(!t.value||!m.value)return;const{width:r,height:a}=T(t.value);if(!r||!a)return;const i=m.value,y=C.value;_(i,t.value),c.drawRotatingShape(i,{centerX:r*.2,centerY:r*.2,time:y,rotationSpeed:.02,drawFunction:M=>{M.fillStyle="#FF6B6B",M.beginPath(),M.moveTo(0,-r*.08),M.lineTo(-r*.07,r*.07),M.lineTo(r*.07,r*.07),M.closePath(),M.fill()}}),c.drawRotatingShape(i,{centerX:r*.45,centerY:r*.2,time:y,rotationSpeed:-.015,drawFunction:M=>{M.fillStyle="#4ECDC4",M.fillRect(-r*.06,-r*.06,r*.12,r*.12)}}),c.drawPulsatingCircle(i,{x:r*.75,y:a*.2,baseRadius:r*.06,pulseAmplitude:r*.03,pulseSpeed:.05,time:y,color:`hsl(${y*2%360}, 70%, 60%)`}),c.drawOscillatingEllipse(i,{x:r*.15,y:a*.5,baseRadiusX:r*.08,baseRadiusY:r*.04,oscillationSpeed:.03,time:y,color:"#F7DC6F"}),c.drawAnimatedSineWave(i,{width:r,height:a,amplitude:a*.08,frequency:.02,phase:y*2,yOffset:.5,color:"#45B7D1",lineWidth:3}),c.drawMovingParticles(i,{centerX:r*.75,centerY:a*.75,particleCount:8,baseRadius:r*.15,radiusVariation:r*.05,time:y,particleRadius:r*.01}),c.drawAnimatedSineWave(i,{width:r,height:a,amplitude:a*.05,frequency:.03,phase:y*3,yOffset:.8,color:"#9B59B6",lineWidth:2}),C.value++,v.value==="animated"&&(f.value=requestAnimationFrame(s))},l={basic:(r,a,i)=>w(r,a,i),complex:(r,a,i)=>e(r,a,i),patterns:(r,a,i)=>o(r,a,i),animated:()=>s()},u=r=>{v.value=r,P(),r==="animated"?(C.value=0,s()):h()},h=()=>{if(!t.value||!m.value)return;const{width:r,height:a}=T(t.value);if(!r||!a)return;const i=l[v.value];typeof i=="function"&&v.value!=="animated"&&i(m.value,r,a)},p=()=>{if(!t.value||!g.value)return;const r=g.value.clientWidth,a=S(t.value,r,U,J);a&&(m.value=a,v.value==="animated"?s():h())};return I(()=>{p(),window.addEventListener("resize",p)}),X(()=>{window.removeEventListener("resize",p),P()}),(r,a)=>(F(),k("div",N,[a[0]||(a[0]=A("h1",{class:"text-gradient geometric-figures__title"},"Adaptive geometric shapes on canvas",-1)),A("div",Z,[(F(),k(Y,null,$(b,i=>A("button",{key:i,class:L(["geometric-figures__btn",{active:G(v)===i}]),onClick:y=>u(i)},O(i),11,j)),64))]),A("div",{ref_key:"canvasWrap",ref:g},[A("canvas",{ref_key:"canvasRef",ref:t,class:"geometric-figures__canvas"},null,512)],512)]))}}),z=W(K,[["__scopeId","data-v-fbbf6b4a"]]),x={class:"main__canvas-geometric-figures"},ee={class:"container"},ae=E({name:"CanvasGeometricFigures",__name:"canvas-geometric-figures",setup(R){return(b,_)=>{const T=z;return F(),k("main",x,[A("div",ee,[H(T)])])}}}),ie=W(ae,[["__scopeId","data-v-2ac75af5"]]);export{ie as default};
